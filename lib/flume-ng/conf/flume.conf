sqlagent.sources = sql-source
sqlagent.sinks = solrSink
sqlagent.channels = memoryChannel
sqlagent.sources.sql-source.type = org.keedio.flume.source.SQLSource

# URL to connect to database
sqlagent.sources.sql-source.connection.url =jdbc:sqlserver://ftcdevsql01.ppl.local:1433;database=cisbeta
#hibernate.connection.driver_class = com.microsoft.sqlserver.jdbc.SQLServerDriver

# Database connection properties
sqlagent.sources.sql-source.user = cis_fast_user
sqlagent.sources.sql-source.password = cis4ftc
#sqlagent.sources.sql-source.table = dbo.FAST_CISMain_InitialLoad_01192016
#sqlagent.sources.sql-source.max.rows = 1000

# Columns to import to kafka (default * import entire row)
#sqlagent.sources.sql-source.columns.to.select =  documentid,documentid as recordid,referencenumber,convert(int,referencenumber) as intreferencenumber,pcxml as company, conxml as consumer,convert(varchar(33),createddate,126)+'Z' as createddate

# Increment value is from you want to start taking data from tables (0 will import entire table)
sqlagent.sources.sql-source.incremental.value = 0

# Query delay, each configured milisecond the query will be sent
sqlagent.sources.sql-source.run.query.delay=5000

# status file is used to save last readed row
sqlagent.sources.sql-source.status.file.path = /var/lib/flume
sqlagent.sources.sql-source.status.file.name = sql-source.status
sqlagent.sources.sql-source.status.column = id

# Custom query
#sqlagent.sources.sql-source.custom.query = select id, documentid,documentid as recordid,referencenumber,convert(int,referencenumber) as intreferencenumber,pcxml as company, conxml as consumer,convert(varchar(33),createddate,126)+'Z' as createddate from dbo.FAST_CISMain_InitialLoad_01192016
sqlagent.sources.sql-source.custom.query = select [acxml], [AgencyContact], [AmountPaid], [AmountRequested], [Comments], [complaintagainstcreditbureau], [complaintagainstcreditbureau45days], convert(varchar(33), ComplaintDate, 126) + 'Z' as ComplaintDate, [ComplaintResolutionFlag], [ComplaintResolutionText], [ContactType], [conxml], [CRADisputeResolved], [CRADisputeResponded], convert(varchar(33), createddate, 126) + 'Z' as createddate, [CrossBorderFlag], [DNCFlag], [Docacl], [Documentid], [enteredby], [externalrefnumber], [InitialContact], [InitialResponse], [InternetRelatedFlag], [language], [MailImageFileName], [MilitaryMember], [MoneyPaid], [Organization], [PaymentMethod], [pcxml], [ProdServiceDesc], [quicksearchflag], [RecordID], [referencenumber], [repxml], [Source], [Statute], [Topic], convert(varchar(33), TransactionDate, 126) + 'Z' as TransactionDate, case when [tsrrelatedflag]='Y' then 'True' else 'False' end as tsrrelatedflag, [UpdatedBy], convert(varchar(33), UpdatedDate, 126) + 'Z' as UpdatedDate, [Violation], convert(int, referencenumber) as intreferencenumber from dbo.FAST_CISMain_InitialLoad_01192016
sqlagent.sources.sql-source.batch.size = 100
#agent.sources.sql-source.max.rows = 10000

# Connected channel names
sqlagent.sources.sql-source.channels = memoryChannel


# Each sink's type must be defined
sqlagent.sinks.solrSink.type = org.apache.flume.sink.solr.morphline.MorphlineSolrSink

#Specify the channel the sink should use
sqlagent.sinks.solrSink.channel = memoryChannel
sqlagent.sinks.solrSink.batchSize=1000
sqlagent.sinks.solrSink.batchDurationMills=1000
sqlagent.sinks.solrSink.morphlineFile=/mnt/cloudera/parcels/CDH-5.7.0-1.cdh5.7.0.p0.45/lib/flume-ng/conf/morphlines.conf
sqlagent.sinks.solrSink.morphlineId=morphline1

# Each channel's typea is defined.
sqlagent.channels.memoryChannel.type = memory

# Other config values specific to each type of channel(sink or source)
# can be defined as well
# In this case, it specifies the capacity of the memory channel
sqlagent.channels.memoryChannel.capacity = 10000
sqlagent.channels.memoryChannel.transactionCapacity = 10000
